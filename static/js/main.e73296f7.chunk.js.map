{"version":3,"sources":["Component/ContactForm/ContactForm.module.css","Component/ContactList/ContactList.module.css","Component/Filter/Filter.module.css","Component/ElementContactList/ElementContactList.module.css","Component/Container/Container.module.css","Component/Container/Container.js","redux/phonebook/phonebook-action.js","redux/phonebook/phonebook-operations.js","Component/ContactForm/ContactForm.js","redux/phonebook/phonebook-selectors.js","Component/Filter/Filter.js","Component/ElementContactList/ElementContactList.js","Component/ContactList/ContactList.js","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js"],"names":["module","exports","Container","children","className","styles","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","ContactForm","state","name","number","nameInputId","uuidv4","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","alert","this","contacts_form","htmlFor","label","type","pattern","title","required","onChange","id","input","form_button","Component","defaultProps","connect","dispatch","contact","post","then","data","catch","error","addContact","getLoading","contacts","loading","getFilter","filter","getVisibleContacts","createSelector","items","normalizedFilter","toLowerCase","includes","target","ElementContactList","contact_name","contact_number","ContactList","onfetchContacts","isLoadingContacts","contact_list","map","contact_item","onClick","item_button","delete","deleteContact","a","get","App","React","createReducer","_","payload","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e73296f7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts_form\":\"ContactForm_contacts_form__iyA7a\",\"form_button\":\"ContactForm_form_button__3vo4R\",\"label\":\"ContactForm_label__3TYlc\",\"input\":\"ContactForm_input__20qSu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stat_list\":\"ContactList_stat_list__3_Hhs\",\"item\":\"ContactList_item__1HigL\",\"contact_list\":\"ContactList_contact_list__3tUJe\",\"contact_item\":\"ContactList_contact_item__3Svuy\",\"item_button\":\"ContactList_item_button__3Mmzo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend_list\":\"Filter_friend_list__35a5J\",\"item\":\"Filter_item__CNsxF\",\"avatar\":\"Filter_avatar__1Pzms\",\"name\":\"Filter_name__1OS7v\",\"status_isOnline\":\"Filter_status_isOnline__32QDh\",\"status_isOffline\":\"Filter_status_isOffline__2tf8E\",\"label\":\"Filter_label__2m5pi\",\"input\":\"Filter_input__2b0B7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_name\":\"ElementContactList_contact_name__3Nom5\",\"contact_number\":\"ElementContactList_contact_number__1hiTS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__3jZSq\"};","import React from 'react';\r\nimport styles from './Container.module.css'\r\n\r\nconst Container = ({ children }) =>\r\n    <div className={styles.Container}>{children}</div>\r\n    \r\nexport default Container;","// import { v4 as uuidv4 } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n","import axios from 'axios';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n} from './phonebook-action';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n// ---------------------------async-await-------------------------\r\nexport const fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactRequest());\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n    dispatch(fetchContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactError(error));\r\n  }\r\n};\r\n// -----------------then-cath----------------------------------\r\n// export const fetchContacts = () => dispatch => {\r\n//   dispatch(fetchContactRequest());\r\n\r\n//   axios\r\n//     .get('/contacts')\r\n//     .then(({ data }) => dispatch(fetchContactSuccess(data)))\r\n//     .catch(error => dispatch(fetchContactError(error)));\r\n// };\r\n\r\nexport const addContact = (name, number) => dispatch => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n  dispatch(addContactRequest());\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nexport const deleteContact = id => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addContact } from '../../redux/phonebook/phonebook-operations';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  static defaultProps = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  static propTypes = {\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n    // name: this.props.name,\r\n    // number: this.props.number\r\n  };\r\n\r\n  nameInputId = uuidv4();\r\n  numberInputId = uuidv4();\r\n\r\n  /** Отвечает за обновление состояния*/\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n  /** Вызывается при отправке формы */\r\n  // Проп который передается форме для вызова при сабмите\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    // this.props.onSubmit(name, number);\r\n    // this.reset();\r\n    if (name !== '' && number !== '') {\r\n      this.props.onSubmit(name, number);\r\n      this.reset();\r\n      return;\r\n    }\r\n    alert('Please fill empty fields');\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <form onSubmit={this.handleSubmit} className={styles.contacts_form}>\r\n          <div>\r\n            <label htmlFor={this.nameInputId} className={styles.label}>\r\n              Name\r\n              <input\r\n                type=\"text\"\r\n                value={name}\r\n                name=\"name\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                required\r\n                onChange={this.handleChange}\r\n                id={this.nameInputId}\r\n                className={styles.input}\r\n              />\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label htmlFor={this.numberInputId} className={styles.label}>\r\n              Number\r\n              <input\r\n                type=\"tel\"\r\n                value={number}\r\n                name=\"number\"\r\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                required\r\n                onChange={this.handleChange}\r\n                id={this.numberInputId}\r\n                className={styles.input}\r\n              />\r\n            </label>\r\n          </div>\r\n\r\n          <button type=\"submit\" className={styles.form_button}>\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (name, number) => dispatch(addContact(name, number)),\r\n});\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getLoading = state => state.contacts.loading;\r\n\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getAllContacts = state => state.contacts.items;\r\n\r\n// export const getVisibleContacts = state => {\r\n//   const contacts = getAllContacts(state);\r\n//   const filter = getFilter(state);\r\n//   const normalizedFilter = filter.toLowerCase();\r\n\r\n//   return contacts.filter(contact =>\r\n//     contact.name.toLowerCase().includes(normalizedFilter),\r\n//   );\r\n// };\r\n//--------используем мемоизацию:\r\nexport const getVisibleContacts = createSelector(\r\n  [getAllContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\n","// import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport styles from './Filter.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { changeFilter } from '../../redux/phonebook/phonebook-action';\r\nimport { getFilter } from '../../redux/phonebook/phonebook-selectors';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label className={styles.label}>\r\n      Find contact by name\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n        className={styles.input}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n// Filter.propTypes = {\r\n//   value: PropTypes.string.isRequired,\r\n//   onChange: PropTypes.func.isRequired,\r\n// };\r\n\r\nconst mapStateToProps = state => ({\r\n  value: getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(changeFilter(e.target.value)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styles from \"../ElementContactList/ElementContactList.module.css\";\r\n\r\nconst ElementContactList = ({ name, number }) => {\r\n    return (<>\r\n        <span className={styles.contact_name}>{name}: </span>\r\n        <span className={styles.contact_number}>{number}</span>\r\n    </>\r\n        );\r\n    };\r\n\r\nElementContactList.propTypes = {\r\n    name: PropTypes.string,\r\n    number: PropTypes.string\r\n}\r\n\r\nElementContactList.defaultProps = {\r\n    name: \"Hello World\",\r\n    number: 123456789\r\n}\r\nexport default ElementContactList;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { deleteContact } from '../../redux/phonebook/phonebook-operations';\r\nimport ElementContactList from '../ElementContactList/ElementContactList';\r\nimport styles from './ContactList.module.css';\r\nimport { fetchContacts } from '../../redux/phonebook/phonebook-operations';\r\nimport {\r\n  getLoading,\r\n  getVisibleContacts,\r\n} from '../../redux/phonebook/phonebook-selectors';\r\n\r\nclass ContactList extends Component {\r\n  static propTypes = {\r\n    onFetchContacts: PropTypes.func,\r\n    contacts: PropTypes.array.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.onfetchContacts();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.isLoadingContacts && <h1>....Загружаем</h1>}\r\n\r\n        <ul className={styles.contact_list}>\r\n          {this.props.contacts.map(({ id, name, number }) => (\r\n            <li key={id} className={styles.contact_item}>\r\n              <ElementContactList name={name} number={number} />\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  this.props.onClick(id);\r\n                }}\r\n                className={styles.item_button}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n//-------------перенесли в   phonebook-selectors\r\n// const getVisibleContacts = (contacts, filter) => {\r\n//   const normalizedFilter = filter.toLowerCase();\r\n\r\n//   return contacts.filter(contact =>\r\n//     contact.name.toLowerCase().includes(normalizedFilter),\r\n//   );\r\n// };\r\nconst mapStateToProps = state => ({\r\n  contacts: getVisibleContacts(state),\r\n  isLoadingContacts: getLoading(state),\r\n  //----------было:\r\n  // const mapStateToProps = ({ contacts: { items, filter, loading } }) => ({\r\n  //   contacts: getVisibleContacts(items, filter),\r\n  //   isLoadingContacts: loading,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onClick: id => dispatch(deleteContact(id)),\r\n  onfetchContacts: () => dispatch(fetchContacts()),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from 'react';\r\nimport Container from './Component/Container/Container';\r\nimport ContactForm from './Component/ContactForm/ContactForm';\r\nimport Filter from './Component/Filter/Filter';\r\nimport ContactList from './Component/ContactList/ContactList';\r\n// import { fetchContacts } from './redux/phonebook/phonebook-operations';\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <div>\r\n          <h1>Phonebook</h1>\r\n          <ContactForm />\r\n\r\n          <h2>Contacts</h2>\r\n          <Filter />\r\n\r\n          <ContactList />\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n// import contacts from '../../json/contacts.json';\r\nimport {\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n} from './phonebook-action';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n  // [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [addContactSuccess]: (state, { payload }) => {\r\n    if (state.map(contact => contact.name).includes(payload.name)) {\r\n      return alert(`${payload.name} is already exist`);\r\n    }\r\n    return [...state, payload];\r\n  },\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  // [fetchContacts.pending]: () => true,\r\n  // [fetchContacts.fulfilled]: () => false,\r\n  // [fetchContacts.rejected]: () => false,\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport contactsReducer from './phonebook/phonebook-reducer';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\n// const rootReducer = combineReducers({\r\n//   contacts: persistReducer(persistConfig, rootReducer),\r\n// });\r\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\n// const persistor = persistStore(store);\r\n// export default { store, persistor };\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport './styles.css';\nimport 'modern-normalize/modern-normalize.css';\nimport { BrowserRouter } from 'react-router-dom';\n// import { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}